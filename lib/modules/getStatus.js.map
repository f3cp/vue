{"version":3,"sources":["modules/getStatus.js"],"names":["getStatus","callback","_broadcast","status","_listener","st","isSubscribe","_data","emitStatus"],"mappings":";;;;;QAMgBA,S,GAAAA,S;AAAT,SAASA,SAAT,CAAmBC,QAAnB,EAA6B;AAAA;;AAClC,OAAKC,UAAL,CAAgBC,MAAhB,CAAuBF,QAAvB;;AAEA,MAAI,CAAC,KAAKG,SAAL,CAAeD,MAApB,EAA4B;AAC1B,SAAKC,SAAL,CAAeD,MAAf,GAAwB,UAACE,EAAD,EAAQ;AAC9B,UAAI,CAAC,MAAKH,UAAL,CAAgBI,WAAhB,CAA4B,QAA5B,CAAL,EAA4C;AAC1C,eAAO,IAAP;AACD;AACD,YAAKC,KAAL,CAAWJ,MAAX,GAAoBE,EAApB;AACA,YAAKH,UAAL,CAAgBM,UAAhB,CAA2BH,EAA3B;AACD,KAND;AAOD;;AAED,SAAO,KAAKE,KAAL,CAAWJ,MAAlB;AACD","file":"getStatus.js","sourcesContent":["/**\n * Get to receive status information from a channel through a callback\n *\n * @param {function} callback\n * @returns {object}\n */\nexport function getStatus(callback) {\n  this._broadcast.status(callback);\n\n  if (!this._listener.status) {\n    this._listener.status = (st) => {\n      if (!this._broadcast.isSubscribe('status')) {\n        return true;\n      }\n      this._data.status = st;\n      this._broadcast.emitStatus(st);\n    };\n  }\n\n  return this._data.status;\n}\n\n"]}